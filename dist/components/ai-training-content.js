"use strict";
"use client";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AiTrainingContent = AiTrainingContent;
const jsx_runtime_1 = require("react/jsx-runtime");
const card_1 = require("@/components/ui/card");
const lucide_react_1 = require("lucide-react");
const back_button_1 = require("./back-button");
const sidebar_1 = require("./ui/sidebar");
const table_1 = require("./ui/table");
const checkbox_1 = require("./ui/checkbox");
const button_1 = require("./ui/button");
const Section = ({ title, emoji, children, defaultOpen = false }) => ((0, jsx_runtime_1.jsxs)(card_1.Card, { className: "bg-card/50", children: [(0, jsx_runtime_1.jsx)(card_1.CardHeader, { children: (0, jsx_runtime_1.jsxs)(card_1.CardTitle, { className: "flex items-center gap-3 text-xl", children: [emoji, title] }) }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: children })] }));
function AiTrainingContent() {
    return ((0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col h-full bg-muted/40", children: [(0, jsx_runtime_1.jsx)("header", { className: "sticky top-0 z-10 flex h-16 shrink-0 items-center justify-between border-b bg-background px-4 sm:px-6", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2", children: [(0, jsx_runtime_1.jsx)(sidebar_1.SidebarTrigger, { className: "lg:hidden" }), (0, jsx_runtime_1.jsx)(back_button_1.BackButton, {}), (0, jsx_runtime_1.jsx)("h1", { className: "text-xl font-semibold tracking-tight", children: "Improving SearnAI" })] }) }), (0, jsx_runtime_1.jsx)("main", { className: "flex-1 overflow-y-auto p-4 md:p-6 lg:p-8", children: (0, jsx_runtime_1.jsx)("div", { className: "flex flex-col items-center justify-center", children: (0, jsx_runtime_1.jsxs)(card_1.Card, { className: "w-full max-w-4xl shadow-lg overflow-hidden border-0 relative", children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { className: "bg-card p-8 text-center items-center", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Cpu, { className: "mx-auto h-12 w-12 text-primary" }), (0, jsx_runtime_1.jsx)(card_1.CardTitle, { className: "text-3xl font-bold mt-6", children: "Detailed Guide to Improving SearnAI" }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { className: "text-lg text-muted-foreground mt-2", children: "How to make me more useful: a technical overview." })] }), (0, jsx_runtime_1.jsxs)(card_1.CardContent, { className: "mx-auto text-left px-4 sm:px-8 py-8 bg-background space-y-6", children: [(0, jsx_runtime_1.jsx)(Section, { title: "Data-Centric Enhancements", emoji: (0, jsx_runtime_1.jsx)(lucide_react_1.Database, { className: "text-blue-400" }), children: (0, jsx_runtime_1.jsxs)(table_1.Table, { children: [(0, jsx_runtime_1.jsx)(table_1.TableHeader, { children: (0, jsx_runtime_1.jsxs)(table_1.TableRow, { children: [(0, jsx_runtime_1.jsx)(table_1.TableHead, { children: "Aspect" }), (0, jsx_runtime_1.jsx)(table_1.TableHead, { children: "What to Do" }), (0, jsx_runtime_1.jsx)(table_1.TableHead, { children: "Why It Helps" })] }) }), (0, jsx_runtime_1.jsxs)(table_1.TableBody, { children: [(0, jsx_runtime_1.jsxs)(table_1.TableRow, { children: [(0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Diverse Corpus" }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Add high-quality text from varied domains (science, literature, tech, culture)." }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Broadens knowledge base and reduces blind spots." })] }), (0, jsx_runtime_1.jsxs)(table_1.TableRow, { children: [(0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Noise Reduction" }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Remove duplicated, contradictory, or low-quality sentences." }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Improves factual accuracy and consistency." })] }), (0, jsx_runtime_1.jsxs)(table_1.TableRow, { children: [(0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Balanced Representation" }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Ensure equal coverage of different perspectives, languages, and cultural contexts." }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Prevents bias and improves relevance for global users." })] }), (0, jsx_runtime_1.jsxs)(table_1.TableRow, { children: [(0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Annotation Quality" }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Use expert annotators for labeling intents, entities, and correct answers." }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Enhances supervised fine-tuning signals." })] })] })] }) }), (0, jsx_runtime_1.jsx)(Section, { title: "Model Fine-Tuning Strategies", emoji: (0, jsx_runtime_1.jsx)(lucide_react_1.ToyBrick, { className: "text-green-400" }), children: (0, jsx_runtime_1.jsxs)("div", { className: "prose prose-base dark:prose-invert max-w-none space-y-4", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h4", { className: "font-semibold", children: "Domain-Specific Fine-Tuning" }), (0, jsx_runtime_1.jsx)("p", { children: "Gather a curated dataset for the target domain (e.g., Indian history, programming). Use a low learning rate (e.g., 1x10\u207B\u2075) to preserve general knowledge while adapting specifics." })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h4", { className: "font-semibold", children: "Instruction-Tuning" }), (0, jsx_runtime_1.jsx)("p", { children: "Train on a mixture of prompts and high-quality responses that follow the \u201Cdirect-then-detail\u201D style you expect. Include meta-instructions like \u201Calways start with a concise answer\u201D." })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h4", { className: "font-semibold", children: "Reinforcement Learning from Human Feedback (RLHF)" }), (0, jsx_runtime_1.jsx)("p", { children: "Collect preference rankings from real users (good vs. bad responses). Optimize the model to maximize the reward model\u2019s score, leading to more helpful outputs." })] })] }) }), (0, jsx_runtime_1.jsx)(Section, { title: "Evaluation & Monitoring", emoji: (0, jsx_runtime_1.jsx)(lucide_react_1.LineChart, { className: "text-yellow-400" }), children: (0, jsx_runtime_1.jsxs)(table_1.Table, { children: [(0, jsx_runtime_1.jsx)(table_1.TableHeader, { children: (0, jsx_runtime_1.jsxs)(table_1.TableRow, { children: [(0, jsx_runtime_1.jsx)(table_1.TableHead, { children: "Metric" }), (0, jsx_runtime_1.jsx)(table_1.TableHead, { children: "How to Measure" }), (0, jsx_runtime_1.jsx)(table_1.TableHead, { children: "Target" })] }) }), (0, jsx_runtime_1.jsxs)(table_1.TableBody, { children: [(0, jsx_runtime_1.jsxs)(table_1.TableRow, { children: [(0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Accuracy" }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Benchmark against curated Q&A sets (e.g., MMLU)." }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "\u2265 90% on core subjects." })] }), (0, jsx_runtime_1.jsxs)(table_1.TableRow, { children: [(0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Response Length" }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Average token count for \u201Cconcise first\u201D compliance." }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "\u2264 30 tokens for the first sentence." })] }), (0, jsx_runtime_1.jsxs)(table_1.TableRow, { children: [(0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "User Satisfaction" }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Collect thumbs-up/down and NPS scores." }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "\u2265 4.5/5 average rating." })] }), (0, jsx_runtime_1.jsxs)(table_1.TableRow, { children: [(0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Latency" }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "Time from request to response." }), (0, jsx_runtime_1.jsx)(table_1.TableCell, { children: "\u2264 800 ms for typical queries." })] })] })] }) }), (0, jsx_runtime_1.jsx)(Section, { title: "Quick Checklist for Your Next Iteration", emoji: (0, jsx_runtime_1.jsx)(lucide_react_1.Milestone, { className: "text-purple-400" }), children: (0, jsx_runtime_1.jsxs)("div", { className: "space-y-3 text-sm", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-3", children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, { id: "c1" }), (0, jsx_runtime_1.jsx)("label", { htmlFor: "c1", children: "Expand the corpus with at least 10% new high-quality documents." })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-3", children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, { id: "c2" }), (0, jsx_runtime_1.jsx)("label", { htmlFor: "c2", children: "Run a pilot RLHF round with 100 user-rated samples." })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-3", children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, { id: "c3" }), (0, jsx_runtime_1.jsx)("label", { htmlFor: "c3", children: "Verify LaTeX rendering in a test set of math questions." })] }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-3", children: [(0, jsx_runtime_1.jsx)(checkbox_1.Checkbox, { id: "c4" }), (0, jsx_runtime_1.jsx)("label", { htmlFor: "c4", children: "Deploy a monitoring dashboard for latency and satisfaction metrics." })] })] }) }), (0, jsx_runtime_1.jsxs)("div", { className: "text-center pt-6", children: [(0, jsx_runtime_1.jsx)("p", { className: "font-semibold text-lg", children: "Mate, would you like a mind-map of this improvement workflow or a sample prompt template to get you started?" }), (0, jsx_runtime_1.jsxs)("div", { className: "flex gap-4 justify-center mt-4", children: [(0, jsx_runtime_1.jsx)(button_1.Button, { children: "Show Mind-Map" }), (0, jsx_runtime_1.jsx)(button_1.Button, { variant: "outline", children: "Show Prompt Template" })] })] })] })] }) }) })] }));
}
