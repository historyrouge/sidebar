
"use client";

import { useState, useTransition } from "react";
import { textToSpeechAction } from "@/app/actions";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Textarea } from "@/components/ui/textarea";
import { useToast } from "@/hooks/use-toast";
import { Loader2, Volume2, Download } from "lucide-react";
import { BackButton } from "./back-button";
import { SidebarTrigger } from "./ui/sidebar";

export function TextToSpeechContent() {
    const [text, setText] = useState("");
    const [audioDataUri, setAudioDataUri] = useState<string | null>(null);
    const [isGenerating, startGenerating] = useTransition();
    const { toast } = useToast();

    const handleGenerateAudio = () => {
        if (text.trim().length === 0) {
            toast({
                title: "No text provided",
                description: "Please enter some text to convert to speech.",
                variant: "destructive",
            });
            return;
        }

        startGenerating(async () => {
            setAudioDataUri(null);
            const result = await textToSpeechAction({ text });
            if (result.error) {
                toast({ title: "Audio Generation Failed", description: result.error, variant: "destructive" });
            } else if (result.data) {
                setAudioDataUri(result.data.audioDataUri);
                toast({ title: "Audio Generated!", description: "Your audio is ready to play." });
            }
        });
    };

    const handleDownload = () => {
        if (!audioDataUri) return;
        const a = document.createElement('a');
        a.href = audioDataUri;
        a.download = 'speech.wav';
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
    };

    return (
        <div className="flex h-full flex-col">
            <header className="sticky top-0 z-10 flex h-16 shrink-0 items-center justify-between border-b bg-background px-4 md:px-6">
                <div className="flex items-center gap-2">
                    <SidebarTrigger className="md:hidden" />
                    <BackButton />
                    <h1 className="text-xl font-semibold tracking-tight">Text to Speech</h1>
                </div>
            </header>
            <main className="flex-1 overflow-y-auto p-4 md:p-6 lg:p-8">
                <div className="mx-auto max-w-2xl space-y-6">
                    <Card>
                        <CardHeader>
                            <CardTitle>Enter Your Text</CardTitle>
                            <CardDescription>Type or paste the text you want to convert to speech. The audio will be generated by Google's TTS model.</CardDescription>
                        </CardHeader>
                        <CardContent>
                            <Textarea
                                placeholder="Start typing here..."
                                className="h-40 resize-none"
                                value={text}
                                onChange={(e) => setText(e.target.value)}
                            />
                        </CardContent>
                    </Card>

                    <Button onClick={handleGenerateAudio} disabled={isGenerating || text.trim().length === 0}>
                        {isGenerating ? <Loader2 className="mr-2 h-4 w-4 animate-spin" /> : <Volume2 className="mr-2 h-4 w-4" />}
                        Generate Audio
                    </Button>

                    {audioDataUri && (
                        <Card>
                            <CardHeader>
                                <CardTitle>Generated Audio</CardTitle>
                            </CardHeader>
                            <CardContent className="flex flex-col sm:flex-row items-center gap-4">
                                <audio controls src={audioDataUri} className="w-full flex-1">
                                    Your browser does not support the audio element.
                                </audio>
                                <Button variant="outline" onClick={handleDownload}>
                                    <Download className="mr-2 h-4 w-4" />
                                    Download WAV
                                </Button>
                            </CardContent>
                        </Card>
                    )}
                </div>
            </main>
        </div>
    );
}
